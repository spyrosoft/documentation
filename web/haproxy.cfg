global
    # To log to /var/log/haproxy.log configure syslog to accept network log events.
    ## This is done by adding the '-r' option to the SYSLOGD_OPTIONS in /etc/sysconfig/syslog.
    # Configure local2 events to go to /var/log/haproxy.log in /etc/sysconfig/syslog:
    ## local2.*       /var/log/haproxy.log
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # Harden SSL
    #ssl-default-bind-options no-sslv3
    #ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    #ssl-default-server-options no-sslv3
    #ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS

    tune.ssl.default-dh-param 2048

# Defaults that the 'listen' and 'backend' sections will use
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend http *:80
    redirect scheme https code 301 if { hdr_end(host) -i https.example.com }
    acl is_firstexample hdr_end(host) -i first.example.com
    acl is_secondexample hdr_end(host) -i second.example.com
    use_backend firstexample if is_firstexample
    use_backend secondexample if is_secondexample
    default_backend first_example

frontend https_termination
    # Strip TLS layer using HAProxy
    # Use your public ip in place of 127.0.0.1, or leave it for dev
    # mkdir /etc/haproxy/certs
    bind 127.0.0.1:443 ssl crt /etc/haproxy/certs
    use_backend termination_example if { ssl_fc_sni https.example.com.pem }
    default_backend termination_example

# Alternative to termination if you would like the application layer to strip TLS
frontend https_passthrough *:443
    option tcplog
    mode tcp
    acl is_passthrough_example hdr_end(host) -i https.example.com
    use_backend passthrough_example if is_passthrough_example



backend first_example
    server first_example 127.0.0.1:8080 maxconn 32

backend second_example
    server second_example 127.0.0.1:8081 maxconn 32

backend termination_example
    server termination_example 127.0.0.1:8082 maxconn 32

backend passthrough_example
    mode tcp
    option ssl-hello-chk
    server firefractal 127.0.0.1:8083 maxconn 32
